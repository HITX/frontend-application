// TODO: This uses pseudolink mixin which is defined in styles.less
// somehow it's still working but probs fragile so move mixins to separate
// file and import here

@import 'cross_support.less';
@import 'colors.less';
@import 'media.less';

// ============= Sidebar ===============

.sidebar(
  @direction,
  @breakpoint: @mediabreak1,
  @order: 2,
  @breakOrder: 1
) when (@direction = in), (@direction = out) {



  .flex(0 0 @sidebarWidth);
  .flexOrder(@order);
	text-align: left;

  @sidebarWidth: 15rem;

  .break(@breakpoint, {
    .flexOrder(@breakOrder);
    .flex(none);
  });

	& > * {
		width: @sidebarWidth;

    .break(@breakpoint, {
      width: 100%;
    });
	}

	.sidebarHeader {
		color: @colorWhite;
    background-color: @colorThemeA;
		font-size: 1.25rem;
		font-weight: bold;
		padding: 1rem;

		& > * {
			display: inline-block;
		}

    .break(@breakpoint, {
      .pseudolink;

      &:after {
        float: right;
        content: '\25BE';
      }

      &.clicked:after {
        content: '\25B4'
      };
    });
	}

	.sidebarMessage {
		margin-top: -.5rem;
		margin-bottom: 1rem;
		padding: .5rem;
		.errorMessage;
	}

	.sidebarBody {

    &.hidden {
      display: none;
    }

		.sidebarEmpty {
			color: @colorDarkGray;
			padding: 1rem;
		}

		.sidebarItem {
			color: @colorDarkGray;
			border-bottom: 2px solid @colorLightGray;
			padding: 1rem;
			white-space: nowrap;

			&:last-child {
				border-bottom: 0;
			}

      &.subHeader {
        font-weight: bold;
      }

			&.selected {
				color: @colorThemeA;
			}

			&:not(.selected) {
				.pseudolink;

        &:hover {
          background-color: @colorLightGray;
        }
			}

			& > * {
				display: inline-block;
				vertical-align: middle;
			}

			.sidebarItemArrow {
				width: 1rem;
				text-align: center;
			}

			.sidebarItemTitle {
				width: @sidebarWidth - 3rem;
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;

        .break(@breakpoint, {
          width: ~'calc(100% - 3rem)';
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        });
			}

			.sidebarItemTitle when (@direction = in) {
				margin-left: .5rem;
			}

			.sidebarItemArrow when (@direction = out) {
				float: right;
			}

      &:not(.subHeader) .sidebarItemArrow when (@direction = in) {
        .break(@breakpoint, {
          display: none;
        });
      }
		}
	}
}

.sidebar(@direction) when not (@direction = in) and not (@direction = out) {
  /* WARNING - Invalid sidebar direction */
  invalid-direction: @direction;
}
